# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Setup virtualenv
      run: |
        python -m pip install --upgrade pip
        python -m venv test_env
        source test_env/bin/activate
    - name: Setup OpenCL
      run: |
        sudo apt-get update
        sudo apt-get install -y ocl-icd-libopencl1
        sudo apt-get install -y intel-opencl-icd
        sudo apt-get install -y ocl-icd-opencl-dev
        
        # see: https://github.com/intel/compute-runtime/releases
        mkdir neo
        cd neo
        wget https://github.com/intel/intel-graphics-compiler/releases/download/v2.7.11/intel-igc-core-2_2.7.11+18581_amd64.deb
        wget https://github.com/intel/intel-graphics-compiler/releases/download/v2.7.11/intel-igc-opencl-2_2.7.11+18581_amd64.deb
        wget https://github.com/intel/compute-runtime/releases/download/25.05.32567.17/intel-level-zero-gpu-dbgsym_1.6.32567.17_amd64.ddeb
        wget https://github.com/intel/compute-runtime/releases/download/25.05.32567.17/intel-level-zero-gpu_1.6.32567.17_amd64.deb
        wget https://github.com/intel/compute-runtime/releases/download/25.05.32567.17/intel-opencl-icd-dbgsym_25.05.32567.17_amd64.ddeb
        wget https://github.com/intel/compute-runtime/releases/download/25.05.32567.17/intel-opencl-icd_25.05.32567.17_amd64.deb
        wget https://github.com/intel/compute-runtime/releases/download/25.05.32567.17/libigdgmm12_22.6.0_amd64.deb
        sudo dpkg -i *.deb
        
    - name: Install dependencies
      run: |
        source test_env/bin/activate
        python -m pip install --upgrade pip
        pip install flake8 pytest numpy maturin
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # NOTE: This would be a nice step but it's looking into dependencies and failing.
    #       For now disable this.
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Editable install boltzmann package
      run: |
        source test_env/bin/activate
        maturin develop -r
    - name: Test with pytest
      run: |
        source test_env/bin/activate
        pytest python/tests
